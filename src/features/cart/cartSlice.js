import { createSlice } from "@reduxjs/toolkit";
// Initial state starts with an empty cart
const initialState = {
    items: [],
};
const cartSlice = createSlice({
    name: "cart",
    initialState,
    reducers: {
        // Adds a product to the cart or increments quantity if it already exists
        addToCart: (state, action) => {
            const existingItem = state.items.find((item) => item.id === action.payload.id);
            if (existingItem) {
                existingItem.quantity += 1;
            }
            else {
                // Add new item with quantity 1
                state.items.push({ ...action.payload, quantity: 1 });
            }
        },
        // Removes one unit of product from cart; removes item if quantity hits 0
        removeFromCart: (state, action) => {
            const index = state.items.findIndex((item) => item.id === action.payload);
            if (index !== -1) {
                if (state.items[index].quantity > 1) {
                    state.items[index].quantity -= 1;
                }
                else {
                    // Remove item entirely if only 1 left
                    state.items.splice(index, 1);
                }
            }
        },
        // Clears the entire cart by resetting items to empty array
        clearCart: (state) => {
            state.items = [];
        },
    },
});
// Selector to get all cart items from state
export const selectCartItems = (state) => state.cart.items;
// Selector to compute total price for all items in the cart
export const selectTotalPrice = (state) => state.cart.items.reduce((total, item) => total + item.price * item.quantity, 0);
// Export action creators generated by createSlice
export const { addToCart, removeFromCart, clearCart } = cartSlice.actions;
// Export the reducer to add to the store
export default cartSlice.reducer;
